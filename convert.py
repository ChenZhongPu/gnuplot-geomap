import pandas as pd
import argparse


def multipolygon2lines(polygon: str):
    start = polygon.index('(((') + 3
    points = polygon[start:-3]
    points = points.replace(')),((', '\n\n')
    return points.replace(',', '\n')


def polygon2lines(polygon: str):
    start = polygon.index('((') + 2
    points = polygon[start:-2]
    return points.replace(',', '\n')


def convert(csv_name, region_polygon, region_name, extra_output, output):
    df = pd.read_csv(csv_name)
    df = df[[region_polygon, region_name]]
    df = df.dropna(subset=[region_name])
    print(f'Total regions: {len(df)}')
    with open(output, 'w') as f:
        for _, row in df.iterrows():
            wkt = str(row[region_polygon])
            name = str(row[region_name])
            if extra_output:
                print(name)
            f.write(f'#{name}\n')
            if 'MULTI' in wkt:
                f.write(multipolygon2lines(wkt))
            else:
                f.write(polygon2lines(wkt))
            f.write('\n\n\n')


if __name__ == '__main__':
    parser = argparse.ArgumentParser()
    parser.add_argument('csv', type=str, help='input csv file generated by ogr2ogr')
    parser.add_argument('-o', '--out', type=str, help='output txt file',
                        default='out.txt')
    parser.add_argument('-r', '--region', type=str, help='filed name for region polygons',
                        default='WKT')
    parser.add_argument('-n', '--name', type=str, help='filed name for region names',
                        required=True)
    parser.add_argument("-o2", '--out2', action='store_true',
                        help='print regions names')

    args = parser.parse_args()

    convert(args.csv, args.region, args.name, args.out2, args.out)
